// Node Cron is a task scheduler module for notification management. Went with this over setInterval() because node cron has easier to read time syntax. ie:
// Minute / Hour / Day / Month / Day of Week (0-6, Sunday being 0)
const cron = require("node-cron");
const { findTasksToNotify } = require("../services/findTasksToNotify");
const { markAsNotified } = require("../services/markAsNotified"); // Didn't need this because task is already loaded in this one function but may use later

// Scheduling one notification for every minute as a test
cron.schedule("*/1 * * * *", async () => {
    try {
        console.log("Cron is running!");
        const tasksToNotify = await findTasksToNotify();
        if (tasksToNotify.length > 0) {
            console.log("Tasks to notify:", tasksToNotify);
            // notification logic
        } else {
            console.log(
                "No tasks to notify. Please update your task reminders or add a new task."
            );
        }
    } catch (error) {
        console.error("Error getting notification:", error);
    }

    for (const task of tasksToNotify) {
        console.log("Notification for:", task.name);

        // Mark task as notified
        task.notified = true;
        await task.save();
    }
});
